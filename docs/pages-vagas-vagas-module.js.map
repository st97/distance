{"version":3,"sources":["webpack:///./src/app/pages/vagas/vagas.module.ts","webpack:///./src/app/pages/vagas/vagas.page.html","webpack:///./src/app/pages/vagas/vagas.page.scss","webpack:///./src/app/pages/vagas/vagas.page.ts"],"names":[],"mappings":"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","file":"pages-vagas-vagas-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VagasPage } from './vagas.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VagasPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [VagasPage]\n})\nexport class VagasPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-menu-button></ion-menu-button>\\n    <ion-title>\\n      Vagas\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- List of Text Items -->\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-searchbar\\n          [(ngModel)]=\\\"pesquisa\\\"\\n          (ionChange)=\\\"buscar()\\\"\\n          (ionClear)=\\\"cancelar()\\\"\\n          (ionCancel)=\\\"limpar()\\\"\\n        >\\n        </ion-searchbar>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-card *ngFor=\\\"let vaga of vagas\\\" (click)=\\\"openVaga(vaga)\\\">\\n          <ion-card-header>\\n            <ion-card-title>{{ vaga.title }}</ion-card-title>\\n            <ion-card-subtitle>{{ getLabels(vaga?.labels) }}</ion-card-subtitle>\\n          </ion-card-header>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n      <ion-infinite-scroll-content\\n        loadingSpinner=\\\"bubbles\\\"\\n        loadingText=\\\"Loading more data...\\\"\\n      >\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n  </ion-grid>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"add\\\" (click)=\\\"openNewVaga()\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ZhZ2FzL3ZhZ2FzLnBhZ2Uuc2NzcyJ9 */\"","import {Vaga} from './../../model/vaga.model';\nimport {Component, OnInit} from '@angular/core';\nimport {VagaService} from 'src/app/service/vaga.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-vagas',\n  templateUrl: './vagas.page.html',\n  styleUrls: ['./vagas.page.scss']\n})\nexport class VagasPage implements OnInit {\n  constructor(private vagaService: VagaService, private router: Router) {}\n\n  vagas: Vaga[] = [];\n  vagasFilter: Vaga[] = [];\n  page = 1;\n  pesquisa = '';\n\n  ngOnInit() {\n    this.vagaService.getAllVagasPaginacao(this.page, 100).subscribe(result => {\n      this.vagasFilter = result;\n      this.vagas = this.vagasFilter;\n    });\n  }\n\n  openVaga(vaga) {\n    this.router.navigate([`/cadastro-vaga/${vaga.number}`]);\n  }\n\n  loadData(event) {\n    this.vagaService.getAllVagasPaginacao(this.page++, 10).subscribe(result => {\n      this.vagasFilter = this.vagasFilter.concat(result);\n      this.vagas = this.vagasFilter;\n      event.target.complete();\n    });\n  }\n  buscar() {\n    this.vagas = this.vagasFilter.filter(a =>\n      a.title.toLocaleLowerCase().includes(this.pesquisa.toLowerCase())\n    );\n  }\n\n  cancelar() {\n    this.vagas = this.vagasFilter;\n  }\n\n  limpar() {\n    this.pesquisa = '';\n  }\n\n  openNewVaga() {\n    window.open('https://github.com/soujava/vagas-java/issues/new', '_blank');\n  }\n\n  getLabels(labels) {\n    if (labels) {\n      let labelMap = labels.map(a => a.name);\n      if (labelMap.length > 0) {\n        return labelMap.reduce(a => a + ', ');\n      }\n    }\n  }\n}\n"],"sourceRoot":""}